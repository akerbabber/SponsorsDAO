// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class HackathonRegistration extends ethereum.Event {
  get params(): HackathonRegistration__Params {
    return new HackathonRegistration__Params(this);
  }
}

export class HackathonRegistration__Params {
  _event: HackathonRegistration;

  constructor(event: HackathonRegistration) {
    this._event = event;
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class HackerRegistration extends ethereum.Event {
  get params(): HackerRegistration__Params {
    return new HackerRegistration__Params(this);
  }
}

export class HackerRegistration__Params {
  _event: HackerRegistration;

  constructor(event: HackerRegistration) {
    this._event = event;
  }

  get hacker(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LockedFundsHandled extends ethereum.Event {
  get params(): LockedFundsHandled__Params {
    return new LockedFundsHandled__Params(this);
  }
}

export class LockedFundsHandled__Params {
  _event: LockedFundsHandled;

  constructor(event: LockedFundsHandled) {
    this._event = event;
  }

  get hacker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sponsor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sponsorshipIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SponsorRegistration extends ethereum.Event {
  get params(): SponsorRegistration__Params {
    return new SponsorRegistration__Params(this);
  }
}

export class SponsorRegistration__Params {
  _event: SponsorRegistration;

  constructor(event: SponsorRegistration) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SponsorshipApproved extends ethereum.Event {
  get params(): SponsorshipApproved__Params {
    return new SponsorshipApproved__Params(this);
  }
}

export class SponsorshipApproved__Params {
  _event: SponsorshipApproved;

  constructor(event: SponsorshipApproved) {
    this._event = event;
  }

  get hacker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sponsor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sponsorshipIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SponsorshipFunded extends ethereum.Event {
  get params(): SponsorshipFunded__Params {
    return new SponsorshipFunded__Params(this);
  }
}

export class SponsorshipFunded__Params {
  _event: SponsorshipFunded;

  constructor(event: SponsorshipFunded) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SponsorshipRequested extends ethereum.Event {
  get params(): SponsorshipRequested__Params {
    return new SponsorshipRequested__Params(this);
  }
}

export class SponsorshipRequested__Params {
  _event: SponsorshipRequested;

  constructor(event: SponsorshipRequested) {
    this._event = event;
  }

  get hacker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SponsorshipUnlocked extends ethereum.Event {
  get params(): SponsorshipUnlocked__Params {
    return new SponsorshipUnlocked__Params(this);
  }
}

export class SponsorshipUnlocked__Params {
  _event: SponsorshipUnlocked;

  constructor(event: SponsorshipUnlocked) {
    this._event = event;
  }

  get hacker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sponsor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sponsorshipIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SponsorshipWithdrawn extends ethereum.Event {
  get params(): SponsorshipWithdrawn__Params {
    return new SponsorshipWithdrawn__Params(this);
  }
}

export class SponsorshipWithdrawn__Params {
  _event: SponsorshipWithdrawn;

  constructor(event: SponsorshipWithdrawn) {
    this._event = event;
  }

  get hacker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sponsorshipIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TrailGiven extends ethereum.Event {
  get params(): TrailGiven__Params {
    return new TrailGiven__Params(this);
  }
}

export class TrailGiven__Params {
  _event: TrailGiven;

  constructor(event: TrailGiven) {
    this._event = event;
  }

  get hacker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sponsor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sponsorshipIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class UpfrontGiven extends ethereum.Event {
  get params(): UpfrontGiven__Params {
    return new UpfrontGiven__Params(this);
  }
}

export class UpfrontGiven__Params {
  _event: UpfrontGiven;

  constructor(event: UpfrontGiven) {
    this._event = event;
  }

  get hacker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sponsor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sponsorshipIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get hackathonIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Contract__hackathonsResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: string;
  value4: string;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: string,
    value4: string,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    return map;
  }

  getAdmin(): Address {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getLogoUrl(): string {
    return this.value2;
  }

  getWebsiteUrl(): string {
    return this.value3;
  }

  getDescription(): string {
    return this.value4;
  }

  getStartDate(): BigInt {
    return this.value5;
  }

  getEndDate(): BigInt {
    return this.value6;
  }

  getSponsorsCounter(): BigInt {
    return this.value7;
  }

  getHackersCounter(): BigInt {
    return this.value8;
  }

  getSponsorshipsCounter(): BigInt {
    return this.value9;
  }

  getLastSponsorDeadline(): BigInt {
    return this.value10;
  }
}

export class Contract__hackersResult {
  value0: boolean;
  value1: string;
  value2: string;
  value3: string;
  value4: string;
  value5: string;
  value6: string;
  value7: string;
  value8: string;
  value9: string;

  constructor(
    value0: boolean,
    value1: string,
    value2: string,
    value3: string,
    value4: string,
    value5: string,
    value6: string,
    value7: string,
    value8: string,
    value9: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromString(this.value6));
    map.set("value7", ethereum.Value.fromString(this.value7));
    map.set("value8", ethereum.Value.fromString(this.value8));
    map.set("value9", ethereum.Value.fromString(this.value9));
    return map;
  }

  getIsRegistered(): boolean {
    return this.value0;
  }

  getLensUrl(): string {
    return this.value1;
  }

  getGithubUrl(): string {
    return this.value2;
  }

  getLinkedInUrl(): string {
    return this.value3;
  }

  getTwitterUrl(): string {
    return this.value4;
  }

  getWebsiteUrl(): string {
    return this.value5;
  }

  getTelegramHandle(): string {
    return this.value6;
  }

  getDiscordHandle(): string {
    return this.value7;
  }

  getEmail(): string {
    return this.value8;
  }

  getLocation(): string {
    return this.value9;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  PRECISION(): BigInt {
    let result = super.call("PRECISION", "PRECISION():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PRECISION", "PRECISION():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllHackersByHackathonIndex(hackathonIndex: BigInt): Array<Address> {
    let result = super.call(
      "getAllHackersByHackathonIndex",
      "getAllHackersByHackathonIndex(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(hackathonIndex)]
    );

    return result[0].toAddressArray();
  }

  try_getAllHackersByHackathonIndex(
    hackathonIndex: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAllHackersByHackathonIndex",
      "getAllHackersByHackathonIndex(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(hackathonIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getHackerDAOs(hacker: Address): Array<Address> {
    let result = super.call(
      "getHackerDAOs",
      "getHackerDAOs(address):(address[])",
      [ethereum.Value.fromAddress(hacker)]
    );

    return result[0].toAddressArray();
  }

  try_getHackerDAOs(hacker: Address): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getHackerDAOs",
      "getHackerDAOs(address):(address[])",
      [ethereum.Value.fromAddress(hacker)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getHackers(): Array<Address> {
    let result = super.call("getHackers", "getHackers():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getHackers(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getHackers", "getHackers():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getSponsorsByHackathonIndex(hackathonIndex: BigInt): Array<Address> {
    let result = super.call(
      "getSponsorsByHackathonIndex",
      "getSponsorsByHackathonIndex(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(hackathonIndex)]
    );

    return result[0].toAddressArray();
  }

  try_getSponsorsByHackathonIndex(
    hackathonIndex: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getSponsorsByHackathonIndex",
      "getSponsorsByHackathonIndex(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(hackathonIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  hackathons(param0: BigInt): Contract__hackathonsResult {
    let result = super.call(
      "hackathons",
      "hackathons(uint256):(address,string,string,string,string,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Contract__hackathonsResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt()
    );
  }

  try_hackathons(
    param0: BigInt
  ): ethereum.CallResult<Contract__hackathonsResult> {
    let result = super.tryCall(
      "hackathons",
      "hackathons(uint256):(address,string,string,string,string,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__hackathonsResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt()
      )
    );
  }

  hackathonsCounter(): BigInt {
    let result = super.call(
      "hackathonsCounter",
      "hackathonsCounter():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_hackathonsCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hackathonsCounter",
      "hackathonsCounter():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hackerAddressByIndex(param0: BigInt): Address {
    let result = super.call(
      "hackerAddressByIndex",
      "hackerAddressByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_hackerAddressByIndex(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "hackerAddressByIndex",
      "hackerAddressByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hackers(param0: Address): Contract__hackersResult {
    let result = super.call(
      "hackers",
      "hackers(address):(bool,string,string,string,string,string,string,string,string,string)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Contract__hackersResult(
      result[0].toBoolean(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString(),
      result[5].toString(),
      result[6].toString(),
      result[7].toString(),
      result[8].toString(),
      result[9].toString()
    );
  }

  try_hackers(param0: Address): ethereum.CallResult<Contract__hackersResult> {
    let result = super.tryCall(
      "hackers",
      "hackers(address):(bool,string,string,string,string,string,string,string,string,string)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__hackersResult(
        value[0].toBoolean(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString(),
        value[5].toString(),
        value[6].toString(),
        value[7].toString(),
        value[8].toString(),
        value[9].toString()
      )
    );
  }

  hackersCounter(): BigInt {
    let result = super.call("hackersCounter", "hackersCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_hackersCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hackersCounter",
      "hackersCounter():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paymentToken(): Address {
    let result = super.call("paymentToken", "paymentToken():(address)", []);

    return result[0].toAddress();
  }

  try_paymentToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("paymentToken", "paymentToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _paymentToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveSponsorshipCall extends ethereum.Call {
  get inputs(): ApproveSponsorshipCall__Inputs {
    return new ApproveSponsorshipCall__Inputs(this);
  }

  get outputs(): ApproveSponsorshipCall__Outputs {
    return new ApproveSponsorshipCall__Outputs(this);
  }
}

export class ApproveSponsorshipCall__Inputs {
  _call: ApproveSponsorshipCall;

  constructor(call: ApproveSponsorshipCall) {
    this._call = call;
  }

  get hackathonIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sponsorshipIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get isLocked(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class ApproveSponsorshipCall__Outputs {
  _call: ApproveSponsorshipCall;

  constructor(call: ApproveSponsorshipCall) {
    this._call = call;
  }
}

export class FundHackathonCall extends ethereum.Call {
  get inputs(): FundHackathonCall__Inputs {
    return new FundHackathonCall__Inputs(this);
  }

  get outputs(): FundHackathonCall__Outputs {
    return new FundHackathonCall__Outputs(this);
  }
}

export class FundHackathonCall__Inputs {
  _call: FundHackathonCall;

  constructor(call: FundHackathonCall) {
    this._call = call;
  }

  get hackathonIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FundHackathonCall__Outputs {
  _call: FundHackathonCall;

  constructor(call: FundHackathonCall) {
    this._call = call;
  }
}

export class GiveTrailFundingCall extends ethereum.Call {
  get inputs(): GiveTrailFundingCall__Inputs {
    return new GiveTrailFundingCall__Inputs(this);
  }

  get outputs(): GiveTrailFundingCall__Outputs {
    return new GiveTrailFundingCall__Outputs(this);
  }
}

export class GiveTrailFundingCall__Inputs {
  _call: GiveTrailFundingCall;

  constructor(call: GiveTrailFundingCall) {
    this._call = call;
  }

  get hackathonIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sponsorshipIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get sponsorIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class GiveTrailFundingCall__Outputs {
  _call: GiveTrailFundingCall;

  constructor(call: GiveTrailFundingCall) {
    this._call = call;
  }
}

export class GiveUpfrontFundingCall extends ethereum.Call {
  get inputs(): GiveUpfrontFundingCall__Inputs {
    return new GiveUpfrontFundingCall__Inputs(this);
  }

  get outputs(): GiveUpfrontFundingCall__Outputs {
    return new GiveUpfrontFundingCall__Outputs(this);
  }
}

export class GiveUpfrontFundingCall__Inputs {
  _call: GiveUpfrontFundingCall;

  constructor(call: GiveUpfrontFundingCall) {
    this._call = call;
  }

  get hackathonIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sponsorshipIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get sponsorIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class GiveUpfrontFundingCall__Outputs {
  _call: GiveUpfrontFundingCall;

  constructor(call: GiveUpfrontFundingCall) {
    this._call = call;
  }
}

export class HandleLockedHackerFundsCall extends ethereum.Call {
  get inputs(): HandleLockedHackerFundsCall__Inputs {
    return new HandleLockedHackerFundsCall__Inputs(this);
  }

  get outputs(): HandleLockedHackerFundsCall__Outputs {
    return new HandleLockedHackerFundsCall__Outputs(this);
  }
}

export class HandleLockedHackerFundsCall__Inputs {
  _call: HandleLockedHackerFundsCall;

  constructor(call: HandleLockedHackerFundsCall) {
    this._call = call;
  }

  get hackathonIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sponsorshipIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get sponsorIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class HandleLockedHackerFundsCall__Outputs {
  _call: HandleLockedHackerFundsCall;

  constructor(call: HandleLockedHackerFundsCall) {
    this._call = call;
  }
}

export class RegisterHackathonCall extends ethereum.Call {
  get inputs(): RegisterHackathonCall__Inputs {
    return new RegisterHackathonCall__Inputs(this);
  }

  get outputs(): RegisterHackathonCall__Outputs {
    return new RegisterHackathonCall__Outputs(this);
  }
}

export class RegisterHackathonCall__Inputs {
  _call: RegisterHackathonCall;

  constructor(call: RegisterHackathonCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get logoUrl(): string {
    return this._call.inputValues[1].value.toString();
  }

  get websiteUrl(): string {
    return this._call.inputValues[2].value.toString();
  }

  get description(): string {
    return this._call.inputValues[3].value.toString();
  }

  get startDate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get lastSponsorDeadline(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class RegisterHackathonCall__Outputs {
  _call: RegisterHackathonCall;

  constructor(call: RegisterHackathonCall) {
    this._call = call;
  }
}

export class RegisterHackerCall extends ethereum.Call {
  get inputs(): RegisterHackerCall__Inputs {
    return new RegisterHackerCall__Inputs(this);
  }

  get outputs(): RegisterHackerCall__Outputs {
    return new RegisterHackerCall__Outputs(this);
  }
}

export class RegisterHackerCall__Inputs {
  _call: RegisterHackerCall;

  constructor(call: RegisterHackerCall) {
    this._call = call;
  }

  get hacker(): RegisterHackerCallHackerStruct {
    return changetype<RegisterHackerCallHackerStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class RegisterHackerCall__Outputs {
  _call: RegisterHackerCall;

  constructor(call: RegisterHackerCall) {
    this._call = call;
  }
}

export class RegisterHackerCallHackerStruct extends ethereum.Tuple {
  get isRegistered(): boolean {
    return this[0].toBoolean();
  }

  get lensUrl(): string {
    return this[1].toString();
  }

  get githubUrl(): string {
    return this[2].toString();
  }

  get linkedInUrl(): string {
    return this[3].toString();
  }

  get twitterUrl(): string {
    return this[4].toString();
  }

  get websiteUrl(): string {
    return this[5].toString();
  }

  get telegramHandle(): string {
    return this[6].toString();
  }

  get discordHandle(): string {
    return this[7].toString();
  }

  get email(): string {
    return this[8].toString();
  }

  get location(): string {
    return this[9].toString();
  }

  get DAOs(): Array<Address> {
    return this[10].toAddressArray();
  }
}

export class RegisterSponsorCall extends ethereum.Call {
  get inputs(): RegisterSponsorCall__Inputs {
    return new RegisterSponsorCall__Inputs(this);
  }

  get outputs(): RegisterSponsorCall__Outputs {
    return new RegisterSponsorCall__Outputs(this);
  }
}

export class RegisterSponsorCall__Inputs {
  _call: RegisterSponsorCall;

  constructor(call: RegisterSponsorCall) {
    this._call = call;
  }

  get sponsor(): RegisterSponsorCallSponsorStruct {
    return changetype<RegisterSponsorCallSponsorStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get hackathonIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RegisterSponsorCall__Outputs {
  _call: RegisterSponsorCall;

  constructor(call: RegisterSponsorCall) {
    this._call = call;
  }
}

export class RegisterSponsorCallSponsorStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get logoUrl(): string {
    return this[1].toString();
  }

  get websiteUrl(): string {
    return this[2].toString();
  }

  get email(): string {
    return this[3].toString();
  }

  get description(): string {
    return this[4].toString();
  }

  get offeredAmount(): BigInt {
    return this[5].toBigInt();
  }

  get fundedAmount(): BigInt {
    return this[6].toBigInt();
  }

  get deadline(): BigInt {
    return this[7].toBigInt();
  }

  get upfrontPercentage(): BigInt {
    return this[8].toBigInt();
  }
}

export class RequestSponsorshipCall extends ethereum.Call {
  get inputs(): RequestSponsorshipCall__Inputs {
    return new RequestSponsorshipCall__Inputs(this);
  }

  get outputs(): RequestSponsorshipCall__Outputs {
    return new RequestSponsorshipCall__Outputs(this);
  }
}

export class RequestSponsorshipCall__Inputs {
  _call: RequestSponsorshipCall;

  constructor(call: RequestSponsorshipCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get hackathonIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get description(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RequestSponsorshipCall__Outputs {
  _call: RequestSponsorshipCall;

  constructor(call: RequestSponsorshipCall) {
    this._call = call;
  }
}

export class UnlockSponsorshipCall extends ethereum.Call {
  get inputs(): UnlockSponsorshipCall__Inputs {
    return new UnlockSponsorshipCall__Inputs(this);
  }

  get outputs(): UnlockSponsorshipCall__Outputs {
    return new UnlockSponsorshipCall__Outputs(this);
  }
}

export class UnlockSponsorshipCall__Inputs {
  _call: UnlockSponsorshipCall;

  constructor(call: UnlockSponsorshipCall) {
    this._call = call;
  }

  get hackathonIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sponsorshipIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get sponsorIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UnlockSponsorshipCall__Outputs {
  _call: UnlockSponsorshipCall;

  constructor(call: UnlockSponsorshipCall) {
    this._call = call;
  }
}

export class WithdrawUnlockedFundsCall extends ethereum.Call {
  get inputs(): WithdrawUnlockedFundsCall__Inputs {
    return new WithdrawUnlockedFundsCall__Inputs(this);
  }

  get outputs(): WithdrawUnlockedFundsCall__Outputs {
    return new WithdrawUnlockedFundsCall__Outputs(this);
  }
}

export class WithdrawUnlockedFundsCall__Inputs {
  _call: WithdrawUnlockedFundsCall;

  constructor(call: WithdrawUnlockedFundsCall) {
    this._call = call;
  }

  get hackathonIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sponsorshipIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get sponsorIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawUnlockedFundsCall__Outputs {
  _call: WithdrawUnlockedFundsCall;

  constructor(call: WithdrawUnlockedFundsCall) {
    this._call = call;
  }
}
